### YamlMime:ManagedReference
items:
- uid: SharpHoundCommonLib.ResolvedSearchResult
  commentId: T:SharpHoundCommonLib.ResolvedSearchResult
  id: ResolvedSearchResult
  parent: SharpHoundCommonLib
  children:
  - SharpHoundCommonLib.ResolvedSearchResult.Deleted
  - SharpHoundCommonLib.ResolvedSearchResult.DisplayName
  - SharpHoundCommonLib.ResolvedSearchResult.Domain
  - SharpHoundCommonLib.ResolvedSearchResult.DomainSid
  - SharpHoundCommonLib.ResolvedSearchResult.ObjectId
  - SharpHoundCommonLib.ResolvedSearchResult.ObjectType
  - SharpHoundCommonLib.ResolvedSearchResult.ToString
  langs:
  - csharp
  - vb
  name: ResolvedSearchResult
  nameWithType: ResolvedSearchResult
  fullName: SharpHoundCommonLib.ResolvedSearchResult
  type: Class
  source:
    remote:
      path: src/CommonLib/ResolvedSearchResult.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ResolvedSearchResult
    path: ../src/CommonLib/ResolvedSearchResult.cs
    startLine: 5
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib
  syntax:
    content: public class ResolvedSearchResult
    content.vb: Public Class ResolvedSearchResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SharpHoundCommonLib.ResolvedSearchResult.DisplayName
  commentId: P:SharpHoundCommonLib.ResolvedSearchResult.DisplayName
  id: DisplayName
  parent: SharpHoundCommonLib.ResolvedSearchResult
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ResolvedSearchResult.DisplayName
  fullName: SharpHoundCommonLib.ResolvedSearchResult.DisplayName
  type: Property
  source:
    remote:
      path: src/CommonLib/ResolvedSearchResult.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: DisplayName
    path: ../src/CommonLib/ResolvedSearchResult.cs
    startLine: 10
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: SharpHoundCommonLib.ResolvedSearchResult.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.ResolvedSearchResult.ObjectType
  commentId: P:SharpHoundCommonLib.ResolvedSearchResult.ObjectType
  id: ObjectType
  parent: SharpHoundCommonLib.ResolvedSearchResult
  langs:
  - csharp
  - vb
  name: ObjectType
  nameWithType: ResolvedSearchResult.ObjectType
  fullName: SharpHoundCommonLib.ResolvedSearchResult.ObjectType
  type: Property
  source:
    remote:
      path: src/CommonLib/ResolvedSearchResult.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ObjectType
    path: ../src/CommonLib/ResolvedSearchResult.cs
    startLine: 15
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib
  syntax:
    content: public Label ObjectType { get; set; }
    parameters: []
    return:
      type: SharpHoundCommonLib.Enums.Label
    content.vb: Public Property ObjectType As Label
  overload: SharpHoundCommonLib.ResolvedSearchResult.ObjectType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.ResolvedSearchResult.ObjectId
  commentId: P:SharpHoundCommonLib.ResolvedSearchResult.ObjectId
  id: ObjectId
  parent: SharpHoundCommonLib.ResolvedSearchResult
  langs:
  - csharp
  - vb
  name: ObjectId
  nameWithType: ResolvedSearchResult.ObjectId
  fullName: SharpHoundCommonLib.ResolvedSearchResult.ObjectId
  type: Property
  source:
    remote:
      path: src/CommonLib/ResolvedSearchResult.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ObjectId
    path: ../src/CommonLib/ResolvedSearchResult.cs
    startLine: 17
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib
  syntax:
    content: public string ObjectId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ObjectId As String
  overload: SharpHoundCommonLib.ResolvedSearchResult.ObjectId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.ResolvedSearchResult.Deleted
  commentId: P:SharpHoundCommonLib.ResolvedSearchResult.Deleted
  id: Deleted
  parent: SharpHoundCommonLib.ResolvedSearchResult
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: ResolvedSearchResult.Deleted
  fullName: SharpHoundCommonLib.ResolvedSearchResult.Deleted
  type: Property
  source:
    remote:
      path: src/CommonLib/ResolvedSearchResult.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: Deleted
    path: ../src/CommonLib/ResolvedSearchResult.cs
    startLine: 23
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib
  syntax:
    content: public bool Deleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Deleted As Boolean
  overload: SharpHoundCommonLib.ResolvedSearchResult.Deleted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.ResolvedSearchResult.Domain
  commentId: P:SharpHoundCommonLib.ResolvedSearchResult.Domain
  id: Domain
  parent: SharpHoundCommonLib.ResolvedSearchResult
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: ResolvedSearchResult.Domain
  fullName: SharpHoundCommonLib.ResolvedSearchResult.Domain
  type: Property
  source:
    remote:
      path: src/CommonLib/ResolvedSearchResult.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: Domain
    path: ../src/CommonLib/ResolvedSearchResult.cs
    startLine: 29
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib
  syntax:
    content: public string Domain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Domain As String
  overload: SharpHoundCommonLib.ResolvedSearchResult.Domain*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.ResolvedSearchResult.DomainSid
  commentId: P:SharpHoundCommonLib.ResolvedSearchResult.DomainSid
  id: DomainSid
  parent: SharpHoundCommonLib.ResolvedSearchResult
  langs:
  - csharp
  - vb
  name: DomainSid
  nameWithType: ResolvedSearchResult.DomainSid
  fullName: SharpHoundCommonLib.ResolvedSearchResult.DomainSid
  type: Property
  source:
    remote:
      path: src/CommonLib/ResolvedSearchResult.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: DomainSid
    path: ../src/CommonLib/ResolvedSearchResult.cs
    startLine: 30
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib
  syntax:
    content: public string DomainSid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DomainSid As String
  overload: SharpHoundCommonLib.ResolvedSearchResult.DomainSid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.ResolvedSearchResult.ToString
  commentId: M:SharpHoundCommonLib.ResolvedSearchResult.ToString
  id: ToString
  parent: SharpHoundCommonLib.ResolvedSearchResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ResolvedSearchResult.ToString()
  fullName: SharpHoundCommonLib.ResolvedSearchResult.ToString()
  type: Method
  source:
    remote:
      path: src/CommonLib/ResolvedSearchResult.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ToString
    path: ../src/CommonLib/ResolvedSearchResult.cs
    startLine: 32
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SharpHoundCommonLib.ResolvedSearchResult.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SharpHoundCommonLib
  commentId: N:SharpHoundCommonLib
  name: SharpHoundCommonLib
  nameWithType: SharpHoundCommonLib
  fullName: SharpHoundCommonLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SharpHoundCommonLib.ResolvedSearchResult.DisplayName*
  commentId: Overload:SharpHoundCommonLib.ResolvedSearchResult.DisplayName
  name: DisplayName
  nameWithType: ResolvedSearchResult.DisplayName
  fullName: SharpHoundCommonLib.ResolvedSearchResult.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SharpHoundCommonLib.ResolvedSearchResult.ObjectType*
  commentId: Overload:SharpHoundCommonLib.ResolvedSearchResult.ObjectType
  name: ObjectType
  nameWithType: ResolvedSearchResult.ObjectType
  fullName: SharpHoundCommonLib.ResolvedSearchResult.ObjectType
- uid: SharpHoundCommonLib.Enums.Label
  commentId: T:SharpHoundCommonLib.Enums.Label
  parent: SharpHoundCommonLib.Enums
  name: Label
  nameWithType: Label
  fullName: SharpHoundCommonLib.Enums.Label
- uid: SharpHoundCommonLib.Enums
  commentId: N:SharpHoundCommonLib.Enums
  name: SharpHoundCommonLib.Enums
  nameWithType: SharpHoundCommonLib.Enums
  fullName: SharpHoundCommonLib.Enums
- uid: SharpHoundCommonLib.ResolvedSearchResult.ObjectId*
  commentId: Overload:SharpHoundCommonLib.ResolvedSearchResult.ObjectId
  name: ObjectId
  nameWithType: ResolvedSearchResult.ObjectId
  fullName: SharpHoundCommonLib.ResolvedSearchResult.ObjectId
- uid: SharpHoundCommonLib.ResolvedSearchResult.Deleted*
  commentId: Overload:SharpHoundCommonLib.ResolvedSearchResult.Deleted
  name: Deleted
  nameWithType: ResolvedSearchResult.Deleted
  fullName: SharpHoundCommonLib.ResolvedSearchResult.Deleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SharpHoundCommonLib.ResolvedSearchResult.Domain*
  commentId: Overload:SharpHoundCommonLib.ResolvedSearchResult.Domain
  name: Domain
  nameWithType: ResolvedSearchResult.Domain
  fullName: SharpHoundCommonLib.ResolvedSearchResult.Domain
- uid: SharpHoundCommonLib.ResolvedSearchResult.DomainSid*
  commentId: Overload:SharpHoundCommonLib.ResolvedSearchResult.DomainSid
  name: DomainSid
  nameWithType: ResolvedSearchResult.DomainSid
  fullName: SharpHoundCommonLib.ResolvedSearchResult.DomainSid
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SharpHoundCommonLib.ResolvedSearchResult.ToString*
  commentId: Overload:SharpHoundCommonLib.ResolvedSearchResult.ToString
  name: ToString
  nameWithType: ResolvedSearchResult.ToString
  fullName: SharpHoundCommonLib.ResolvedSearchResult.ToString
