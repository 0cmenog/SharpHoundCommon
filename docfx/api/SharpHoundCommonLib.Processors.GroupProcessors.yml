### YamlMime:ManagedReference
items:
- uid: SharpHoundCommonLib.Processors.GroupProcessors
  commentId: T:SharpHoundCommonLib.Processors.GroupProcessors
  id: GroupProcessors
  parent: SharpHoundCommonLib.Processors
  children:
  - SharpHoundCommonLib.Processors.GroupProcessors.GetPrimaryGroupInfo(System.String,System.String)
  - SharpHoundCommonLib.Processors.GroupProcessors.ReadGroupMembers(System.String,System.String[])
  langs:
  - csharp
  - vb
  name: GroupProcessors
  nameWithType: GroupProcessors
  fullName: SharpHoundCommonLib.Processors.GroupProcessors
  type: Class
  source:
    remote:
      path: src/CommonLib/Processors/GroupProcessors.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: GroupProcessors
    path: ../src/CommonLib/Processors/GroupProcessors.cs
    startLine: 7
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  syntax:
    content: public class GroupProcessors
    content.vb: Public Class GroupProcessors
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SharpHoundCommonLib.Processors.GroupProcessors.ReadGroupMembers(System.String,System.String[])
  commentId: M:SharpHoundCommonLib.Processors.GroupProcessors.ReadGroupMembers(System.String,System.String[])
  id: ReadGroupMembers(System.String,System.String[])
  parent: SharpHoundCommonLib.Processors.GroupProcessors
  langs:
  - csharp
  - vb
  name: ReadGroupMembers(String, String[])
  nameWithType: GroupProcessors.ReadGroupMembers(String, String[])
  fullName: SharpHoundCommonLib.Processors.GroupProcessors.ReadGroupMembers(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/GroupProcessors.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ReadGroupMembers
    path: ../src/CommonLib/Processors/GroupProcessors.cs
    startLine: 15
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  summary: "\nProcesses the &quot;member&quot; property of groups and converts the resulting list of distinguishednames to TypedPrincipals\n"
  example: []
  syntax:
    content: public static IEnumerable<TypedPrincipal> ReadGroupMembers(string distinguishedName, string[] members)
    parameters:
    - id: distinguishedName
      type: System.String
      description: ''
    - id: members
      type: System.String[]
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
      description: ''
    content.vb: Public Shared Function ReadGroupMembers(distinguishedName As String, members As String()) As IEnumerable(Of TypedPrincipal)
  overload: SharpHoundCommonLib.Processors.GroupProcessors.ReadGroupMembers*
  nameWithType.vb: GroupProcessors.ReadGroupMembers(String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SharpHoundCommonLib.Processors.GroupProcessors.ReadGroupMembers(System.String, System.String())
  name.vb: ReadGroupMembers(String, String())
- uid: SharpHoundCommonLib.Processors.GroupProcessors.GetPrimaryGroupInfo(System.String,System.String)
  commentId: M:SharpHoundCommonLib.Processors.GroupProcessors.GetPrimaryGroupInfo(System.String,System.String)
  id: GetPrimaryGroupInfo(System.String,System.String)
  parent: SharpHoundCommonLib.Processors.GroupProcessors
  langs:
  - csharp
  - vb
  name: GetPrimaryGroupInfo(String, String)
  nameWithType: GroupProcessors.GetPrimaryGroupInfo(String, String)
  fullName: SharpHoundCommonLib.Processors.GroupProcessors.GetPrimaryGroupInfo(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/GroupProcessors.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: GetPrimaryGroupInfo
    path: ../src/CommonLib/Processors/GroupProcessors.cs
    startLine: 61
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  summary: "\nReads the primary group info from a user or computer object and massages it into the proper format.\n"
  example: []
  syntax:
    content: public static string GetPrimaryGroupInfo(string primaryGroupId, string objectId)
    parameters:
    - id: primaryGroupId
      type: System.String
    - id: objectId
      type: System.String
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetPrimaryGroupInfo(primaryGroupId As String, objectId As String) As String
  overload: SharpHoundCommonLib.Processors.GroupProcessors.GetPrimaryGroupInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SharpHoundCommonLib.Processors
  commentId: N:SharpHoundCommonLib.Processors
  name: SharpHoundCommonLib.Processors
  nameWithType: SharpHoundCommonLib.Processors
  fullName: SharpHoundCommonLib.Processors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SharpHoundCommonLib.Processors.GroupProcessors.ReadGroupMembers*
  commentId: Overload:SharpHoundCommonLib.Processors.GroupProcessors.ReadGroupMembers
  name: ReadGroupMembers
  nameWithType: GroupProcessors.ReadGroupMembers
  fullName: SharpHoundCommonLib.Processors.GroupProcessors.ReadGroupMembers
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
  commentId: T:System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TypedPrincipal>
  nameWithType: IEnumerable<TypedPrincipal>
  fullName: System.Collections.Generic.IEnumerable<SharpHoundCommonLib.OutputTypes.TypedPrincipal>
  nameWithType.vb: IEnumerable(Of TypedPrincipal)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SharpHoundCommonLib.OutputTypes.TypedPrincipal)
  name.vb: IEnumerable(Of TypedPrincipal)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SharpHoundCommonLib.OutputTypes.TypedPrincipal
    name: TypedPrincipal
    nameWithType: TypedPrincipal
    fullName: SharpHoundCommonLib.OutputTypes.TypedPrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SharpHoundCommonLib.OutputTypes.TypedPrincipal
    name: TypedPrincipal
    nameWithType: TypedPrincipal
    fullName: SharpHoundCommonLib.OutputTypes.TypedPrincipal
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SharpHoundCommonLib.Processors.GroupProcessors.GetPrimaryGroupInfo*
  commentId: Overload:SharpHoundCommonLib.Processors.GroupProcessors.GetPrimaryGroupInfo
  name: GetPrimaryGroupInfo
  nameWithType: GroupProcessors.GetPrimaryGroupInfo
  fullName: SharpHoundCommonLib.Processors.GroupProcessors.GetPrimaryGroupInfo
