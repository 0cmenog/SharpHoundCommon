### YamlMime:ManagedReference
items:
- uid: SharpHoundCommonLib.Processors.ContainerProcessor
  commentId: T:SharpHoundCommonLib.Processors.ContainerProcessor
  id: ContainerProcessor
  parent: SharpHoundCommonLib.Processors
  children:
  - SharpHoundCommonLib.Processors.ContainerProcessor.GetContainerChildObjects(System.String)
  - SharpHoundCommonLib.Processors.ContainerProcessor.ReadBlocksInheritance(System.String)
  - SharpHoundCommonLib.Processors.ContainerProcessor.ReadContainerGPLinks(System.String)
  langs:
  - csharp
  - vb
  name: ContainerProcessor
  nameWithType: ContainerProcessor
  fullName: SharpHoundCommonLib.Processors.ContainerProcessor
  type: Class
  source:
    remote:
      path: src/CommonLib/Processors/ContainerProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ContainerProcessor
    path: ../src/CommonLib/Processors/ContainerProcessor.cs
    startLine: 7
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  syntax:
    content: public class ContainerProcessor
    content.vb: Public Class ContainerProcessor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SharpHoundCommonLib.Processors.ContainerProcessor.GetContainerChildObjects(System.String)
  commentId: M:SharpHoundCommonLib.Processors.ContainerProcessor.GetContainerChildObjects(System.String)
  id: GetContainerChildObjects(System.String)
  parent: SharpHoundCommonLib.Processors.ContainerProcessor
  langs:
  - csharp
  - vb
  name: GetContainerChildObjects(String)
  nameWithType: ContainerProcessor.GetContainerChildObjects(String)
  fullName: SharpHoundCommonLib.Processors.ContainerProcessor.GetContainerChildObjects(System.String)
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/ContainerProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: GetContainerChildObjects
    path: ../src/CommonLib/Processors/ContainerProcessor.cs
    startLine: 14
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  summary: "\nFinds all immediate child objects of a container. \n"
  example: []
  syntax:
    content: public static IEnumerable<TypedPrincipal> GetContainerChildObjects(string distinguishedName)
    parameters:
    - id: distinguishedName
      type: System.String
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
      description: ''
    content.vb: Public Shared Function GetContainerChildObjects(distinguishedName As String) As IEnumerable(Of TypedPrincipal)
  overload: SharpHoundCommonLib.Processors.ContainerProcessor.GetContainerChildObjects*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SharpHoundCommonLib.Processors.ContainerProcessor.ReadContainerGPLinks(System.String)
  commentId: M:SharpHoundCommonLib.Processors.ContainerProcessor.ReadContainerGPLinks(System.String)
  id: ReadContainerGPLinks(System.String)
  parent: SharpHoundCommonLib.Processors.ContainerProcessor
  langs:
  - csharp
  - vb
  name: ReadContainerGPLinks(String)
  nameWithType: ContainerProcessor.ReadContainerGPLinks(String)
  fullName: SharpHoundCommonLib.Processors.ContainerProcessor.ReadContainerGPLinks(System.String)
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/ContainerProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ReadContainerGPLinks
    path: ../src/CommonLib/Processors/ContainerProcessor.cs
    startLine: 41
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  summary: "\nReads the &quot;gplink&quot; property from a SearchResult and converts the links into the acceptable SharpHound format\n"
  example: []
  syntax:
    content: public static IEnumerable<GPLink> ReadContainerGPLinks(string gpLink)
    parameters:
    - id: gpLink
      type: System.String
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.GPLink}
      description: ''
    content.vb: Public Shared Function ReadContainerGPLinks(gpLink As String) As IEnumerable(Of GPLink)
  overload: SharpHoundCommonLib.Processors.ContainerProcessor.ReadContainerGPLinks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SharpHoundCommonLib.Processors.ContainerProcessor.ReadBlocksInheritance(System.String)
  commentId: M:SharpHoundCommonLib.Processors.ContainerProcessor.ReadBlocksInheritance(System.String)
  id: ReadBlocksInheritance(System.String)
  parent: SharpHoundCommonLib.Processors.ContainerProcessor
  langs:
  - csharp
  - vb
  name: ReadBlocksInheritance(String)
  nameWithType: ContainerProcessor.ReadBlocksInheritance(String)
  fullName: SharpHoundCommonLib.Processors.ContainerProcessor.ReadBlocksInheritance(System.String)
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/ContainerProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ReadBlocksInheritance
    path: ../src/CommonLib/Processors/ContainerProcessor.cs
    startLine: 68
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  summary: "\nChecks if a container blocks privilege inheritance\n"
  example: []
  syntax:
    content: public static bool ReadBlocksInheritance(string gpOptions)
    parameters:
    - id: gpOptions
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ReadBlocksInheritance(gpOptions As String) As Boolean
  overload: SharpHoundCommonLib.Processors.ContainerProcessor.ReadBlocksInheritance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SharpHoundCommonLib.Processors
  commentId: N:SharpHoundCommonLib.Processors
  name: SharpHoundCommonLib.Processors
  nameWithType: SharpHoundCommonLib.Processors
  fullName: SharpHoundCommonLib.Processors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SharpHoundCommonLib.Processors.ContainerProcessor.GetContainerChildObjects*
  commentId: Overload:SharpHoundCommonLib.Processors.ContainerProcessor.GetContainerChildObjects
  name: GetContainerChildObjects
  nameWithType: ContainerProcessor.GetContainerChildObjects
  fullName: SharpHoundCommonLib.Processors.ContainerProcessor.GetContainerChildObjects
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
  commentId: T:System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TypedPrincipal>
  nameWithType: IEnumerable<TypedPrincipal>
  fullName: System.Collections.Generic.IEnumerable<SharpHoundCommonLib.OutputTypes.TypedPrincipal>
  nameWithType.vb: IEnumerable(Of TypedPrincipal)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SharpHoundCommonLib.OutputTypes.TypedPrincipal)
  name.vb: IEnumerable(Of TypedPrincipal)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SharpHoundCommonLib.OutputTypes.TypedPrincipal
    name: TypedPrincipal
    nameWithType: TypedPrincipal
    fullName: SharpHoundCommonLib.OutputTypes.TypedPrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SharpHoundCommonLib.OutputTypes.TypedPrincipal
    name: TypedPrincipal
    nameWithType: TypedPrincipal
    fullName: SharpHoundCommonLib.OutputTypes.TypedPrincipal
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SharpHoundCommonLib.Processors.ContainerProcessor.ReadContainerGPLinks*
  commentId: Overload:SharpHoundCommonLib.Processors.ContainerProcessor.ReadContainerGPLinks
  name: ReadContainerGPLinks
  nameWithType: ContainerProcessor.ReadContainerGPLinks
  fullName: SharpHoundCommonLib.Processors.ContainerProcessor.ReadContainerGPLinks
- uid: System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.GPLink}
  commentId: T:System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.GPLink}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<GPLink>
  nameWithType: IEnumerable<GPLink>
  fullName: System.Collections.Generic.IEnumerable<SharpHoundCommonLib.OutputTypes.GPLink>
  nameWithType.vb: IEnumerable(Of GPLink)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SharpHoundCommonLib.OutputTypes.GPLink)
  name.vb: IEnumerable(Of GPLink)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SharpHoundCommonLib.OutputTypes.GPLink
    name: GPLink
    nameWithType: GPLink
    fullName: SharpHoundCommonLib.OutputTypes.GPLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SharpHoundCommonLib.OutputTypes.GPLink
    name: GPLink
    nameWithType: GPLink
    fullName: SharpHoundCommonLib.OutputTypes.GPLink
  - name: )
    nameWithType: )
    fullName: )
- uid: SharpHoundCommonLib.Processors.ContainerProcessor.ReadBlocksInheritance*
  commentId: Overload:SharpHoundCommonLib.Processors.ContainerProcessor.ReadBlocksInheritance
  name: ReadBlocksInheritance
  nameWithType: ContainerProcessor.ReadBlocksInheritance
  fullName: SharpHoundCommonLib.Processors.ContainerProcessor.ReadBlocksInheritance
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
