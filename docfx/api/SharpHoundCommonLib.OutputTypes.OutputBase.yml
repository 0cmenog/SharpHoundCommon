### YamlMime:ManagedReference
items:
- uid: SharpHoundCommonLib.OutputTypes.OutputBase
  commentId: T:SharpHoundCommonLib.OutputTypes.OutputBase
  id: OutputBase
  parent: SharpHoundCommonLib.OutputTypes
  children:
  - SharpHoundCommonLib.OutputTypes.OutputBase.Aces
  - SharpHoundCommonLib.OutputTypes.OutputBase.IsACLProtected
  - SharpHoundCommonLib.OutputTypes.OutputBase.IsDeleted
  - SharpHoundCommonLib.OutputTypes.OutputBase.ObjectIdentifier
  - SharpHoundCommonLib.OutputTypes.OutputBase.Properties
  langs:
  - csharp
  - vb
  name: OutputBase
  nameWithType: OutputBase
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase
  type: Class
  source:
    remote:
      path: src/CommonLib/OutputTypes/OutputBase.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: OutputBase
    path: ../src/CommonLib/OutputTypes/OutputBase.cs
    startLine: 7
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  summary: "\nRepresents a base JSON object which other objects will inherit from.\n"
  example: []
  syntax:
    content: public class OutputBase
    content.vb: Public Class OutputBase
  inheritance:
  - System.Object
  derivedClasses:
  - SharpHoundCommonLib.OutputTypes.Computer
  - SharpHoundCommonLib.OutputTypes.Container
  - SharpHoundCommonLib.OutputTypes.Domain
  - SharpHoundCommonLib.OutputTypes.GPO
  - SharpHoundCommonLib.OutputTypes.Group
  - SharpHoundCommonLib.OutputTypes.OU
  - SharpHoundCommonLib.OutputTypes.User
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SharpHoundCommonLib.OutputTypes.OutputBase.Aces
  commentId: P:SharpHoundCommonLib.OutputTypes.OutputBase.Aces
  id: Aces
  parent: SharpHoundCommonLib.OutputTypes.OutputBase
  langs:
  - csharp
  - vb
  name: Aces
  nameWithType: OutputBase.Aces
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase.Aces
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/OutputBase.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: Aces
    path: ../src/CommonLib/OutputTypes/OutputBase.cs
    startLine: 9
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  syntax:
    content: public ACE[] Aces { get; set; }
    parameters: []
    return:
      type: SharpHoundCommonLib.OutputTypes.ACE[]
    content.vb: Public Property Aces As ACE()
  overload: SharpHoundCommonLib.OutputTypes.OutputBase.Aces*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.OutputTypes.OutputBase.ObjectIdentifier
  commentId: P:SharpHoundCommonLib.OutputTypes.OutputBase.ObjectIdentifier
  id: ObjectIdentifier
  parent: SharpHoundCommonLib.OutputTypes.OutputBase
  langs:
  - csharp
  - vb
  name: ObjectIdentifier
  nameWithType: OutputBase.ObjectIdentifier
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase.ObjectIdentifier
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/OutputBase.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ObjectIdentifier
    path: ../src/CommonLib/OutputTypes/OutputBase.cs
    startLine: 10
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  syntax:
    content: public string ObjectIdentifier { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ObjectIdentifier As String
  overload: SharpHoundCommonLib.OutputTypes.OutputBase.ObjectIdentifier*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.OutputTypes.OutputBase.Properties
  commentId: F:SharpHoundCommonLib.OutputTypes.OutputBase.Properties
  id: Properties
  parent: SharpHoundCommonLib.OutputTypes.OutputBase
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: OutputBase.Properties
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase.Properties
  type: Field
  source:
    remote:
      path: src/CommonLib/OutputTypes/OutputBase.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: Properties
    path: ../src/CommonLib/OutputTypes/OutputBase.cs
    startLine: 11
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  syntax:
    content: public Dictionary<string, object> Properties
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Properties As Dictionary(Of String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.OutputTypes.OutputBase.IsDeleted
  commentId: P:SharpHoundCommonLib.OutputTypes.OutputBase.IsDeleted
  id: IsDeleted
  parent: SharpHoundCommonLib.OutputTypes.OutputBase
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: OutputBase.IsDeleted
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase.IsDeleted
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/OutputBase.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: IsDeleted
    path: ../src/CommonLib/OutputTypes/OutputBase.cs
    startLine: 12
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  syntax:
    content: public bool IsDeleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDeleted As Boolean
  overload: SharpHoundCommonLib.OutputTypes.OutputBase.IsDeleted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.OutputTypes.OutputBase.IsACLProtected
  commentId: P:SharpHoundCommonLib.OutputTypes.OutputBase.IsACLProtected
  id: IsACLProtected
  parent: SharpHoundCommonLib.OutputTypes.OutputBase
  langs:
  - csharp
  - vb
  name: IsACLProtected
  nameWithType: OutputBase.IsACLProtected
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase.IsACLProtected
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/OutputBase.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: IsACLProtected
    path: ../src/CommonLib/OutputTypes/OutputBase.cs
    startLine: 13
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  syntax:
    content: public bool IsACLProtected { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsACLProtected As Boolean
  overload: SharpHoundCommonLib.OutputTypes.OutputBase.IsACLProtected*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SharpHoundCommonLib.OutputTypes
  commentId: N:SharpHoundCommonLib.OutputTypes
  name: SharpHoundCommonLib.OutputTypes
  nameWithType: SharpHoundCommonLib.OutputTypes
  fullName: SharpHoundCommonLib.OutputTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SharpHoundCommonLib.OutputTypes.OutputBase.Aces*
  commentId: Overload:SharpHoundCommonLib.OutputTypes.OutputBase.Aces
  name: Aces
  nameWithType: OutputBase.Aces
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase.Aces
- uid: SharpHoundCommonLib.OutputTypes.ACE[]
  isExternal: true
  name: ACE[]
  nameWithType: ACE[]
  fullName: SharpHoundCommonLib.OutputTypes.ACE[]
  nameWithType.vb: ACE()
  fullName.vb: SharpHoundCommonLib.OutputTypes.ACE()
  name.vb: ACE()
  spec.csharp:
  - uid: SharpHoundCommonLib.OutputTypes.ACE
    name: ACE
    nameWithType: ACE
    fullName: SharpHoundCommonLib.OutputTypes.ACE
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SharpHoundCommonLib.OutputTypes.ACE
    name: ACE
    nameWithType: ACE
    fullName: SharpHoundCommonLib.OutputTypes.ACE
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SharpHoundCommonLib.OutputTypes.OutputBase.ObjectIdentifier*
  commentId: Overload:SharpHoundCommonLib.OutputTypes.OutputBase.ObjectIdentifier
  name: ObjectIdentifier
  nameWithType: OutputBase.ObjectIdentifier
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase.ObjectIdentifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SharpHoundCommonLib.OutputTypes.OutputBase.IsDeleted*
  commentId: Overload:SharpHoundCommonLib.OutputTypes.OutputBase.IsDeleted
  name: IsDeleted
  nameWithType: OutputBase.IsDeleted
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase.IsDeleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SharpHoundCommonLib.OutputTypes.OutputBase.IsACLProtected*
  commentId: Overload:SharpHoundCommonLib.OutputTypes.OutputBase.IsACLProtected
  name: IsACLProtected
  nameWithType: OutputBase.IsACLProtected
  fullName: SharpHoundCommonLib.OutputTypes.OutputBase.IsACLProtected
