### YamlMime:ManagedReference
items:
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters
  commentId: T:SharpHoundCommonLib.LDAPQueries.CommonFilters
  id: CommonFilters
  parent: SharpHoundCommonLib.LDAPQueries
  children:
  - SharpHoundCommonLib.LDAPQueries.CommonFilters.EnabledOnly
  - SharpHoundCommonLib.LDAPQueries.CommonFilters.ExcludeDomainControllers
  - SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsGPCFilePath
  - SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsSPN
  - SharpHoundCommonLib.LDAPQueries.CommonFilters.SpecificSID(System.String)
  - SharpHoundCommonLib.LDAPQueries.CommonFilters.TrustedDomains
  langs:
  - csharp
  - vb
  name: CommonFilters
  nameWithType: CommonFilters
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters
  type: Class
  source:
    remote:
      path: src/CommonLib/LDAPQueries/CommonFilters.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: CommonFilters
    path: ../src/CommonLib/LDAPQueries/CommonFilters.cs
    startLine: 2
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.LDAPQueries
  syntax:
    content: public class CommonFilters
    content.vb: Public Class CommonFilters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.EnabledOnly
  commentId: P:SharpHoundCommonLib.LDAPQueries.CommonFilters.EnabledOnly
  id: EnabledOnly
  parent: SharpHoundCommonLib.LDAPQueries.CommonFilters
  langs:
  - csharp
  - vb
  name: EnabledOnly
  nameWithType: CommonFilters.EnabledOnly
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.EnabledOnly
  type: Property
  source:
    remote:
      path: src/CommonLib/LDAPQueries/CommonFilters.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: EnabledOnly
    path: ../src/CommonLib/LDAPQueries/CommonFilters.cs
    startLine: 4
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.LDAPQueries
  syntax:
    content: public static string EnabledOnly { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property EnabledOnly As String
  overload: SharpHoundCommonLib.LDAPQueries.CommonFilters.EnabledOnly*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsGPCFilePath
  commentId: P:SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsGPCFilePath
  id: NeedsGPCFilePath
  parent: SharpHoundCommonLib.LDAPQueries.CommonFilters
  langs:
  - csharp
  - vb
  name: NeedsGPCFilePath
  nameWithType: CommonFilters.NeedsGPCFilePath
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsGPCFilePath
  type: Property
  source:
    remote:
      path: src/CommonLib/LDAPQueries/CommonFilters.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: NeedsGPCFilePath
    path: ../src/CommonLib/LDAPQueries/CommonFilters.cs
    startLine: 6
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.LDAPQueries
  syntax:
    content: public static string NeedsGPCFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property NeedsGPCFilePath As String
  overload: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsGPCFilePath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.SpecificSID(System.String)
  commentId: M:SharpHoundCommonLib.LDAPQueries.CommonFilters.SpecificSID(System.String)
  id: SpecificSID(System.String)
  parent: SharpHoundCommonLib.LDAPQueries.CommonFilters
  langs:
  - csharp
  - vb
  name: SpecificSID(String)
  nameWithType: CommonFilters.SpecificSID(String)
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.SpecificSID(System.String)
  type: Method
  source:
    remote:
      path: src/CommonLib/LDAPQueries/CommonFilters.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: SpecificSID
    path: ../src/CommonLib/LDAPQueries/CommonFilters.cs
    startLine: 8
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.LDAPQueries
  syntax:
    content: public static string SpecificSID(string sid)
    parameters:
    - id: sid
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function SpecificSID(sid As String) As String
  overload: SharpHoundCommonLib.LDAPQueries.CommonFilters.SpecificSID*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsSPN
  commentId: P:SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsSPN
  id: NeedsSPN
  parent: SharpHoundCommonLib.LDAPQueries.CommonFilters
  langs:
  - csharp
  - vb
  name: NeedsSPN
  nameWithType: CommonFilters.NeedsSPN
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsSPN
  type: Property
  source:
    remote:
      path: src/CommonLib/LDAPQueries/CommonFilters.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: NeedsSPN
    path: ../src/CommonLib/LDAPQueries/CommonFilters.cs
    startLine: 14
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.LDAPQueries
  syntax:
    content: public static string NeedsSPN { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property NeedsSPN As String
  overload: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsSPN*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.ExcludeDomainControllers
  commentId: P:SharpHoundCommonLib.LDAPQueries.CommonFilters.ExcludeDomainControllers
  id: ExcludeDomainControllers
  parent: SharpHoundCommonLib.LDAPQueries.CommonFilters
  langs:
  - csharp
  - vb
  name: ExcludeDomainControllers
  nameWithType: CommonFilters.ExcludeDomainControllers
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.ExcludeDomainControllers
  type: Property
  source:
    remote:
      path: src/CommonLib/LDAPQueries/CommonFilters.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ExcludeDomainControllers
    path: ../src/CommonLib/LDAPQueries/CommonFilters.cs
    startLine: 16
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.LDAPQueries
  syntax:
    content: public static string ExcludeDomainControllers { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ExcludeDomainControllers As String
  overload: SharpHoundCommonLib.LDAPQueries.CommonFilters.ExcludeDomainControllers*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.TrustedDomains
  commentId: P:SharpHoundCommonLib.LDAPQueries.CommonFilters.TrustedDomains
  id: TrustedDomains
  parent: SharpHoundCommonLib.LDAPQueries.CommonFilters
  langs:
  - csharp
  - vb
  name: TrustedDomains
  nameWithType: CommonFilters.TrustedDomains
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.TrustedDomains
  type: Property
  source:
    remote:
      path: src/CommonLib/LDAPQueries/CommonFilters.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: TrustedDomains
    path: ../src/CommonLib/LDAPQueries/CommonFilters.cs
    startLine: 18
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.LDAPQueries
  syntax:
    content: public static string TrustedDomains { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property TrustedDomains As String
  overload: SharpHoundCommonLib.LDAPQueries.CommonFilters.TrustedDomains*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: SharpHoundCommonLib.LDAPQueries
  commentId: N:SharpHoundCommonLib.LDAPQueries
  name: SharpHoundCommonLib.LDAPQueries
  nameWithType: SharpHoundCommonLib.LDAPQueries
  fullName: SharpHoundCommonLib.LDAPQueries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.EnabledOnly*
  commentId: Overload:SharpHoundCommonLib.LDAPQueries.CommonFilters.EnabledOnly
  name: EnabledOnly
  nameWithType: CommonFilters.EnabledOnly
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.EnabledOnly
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsGPCFilePath*
  commentId: Overload:SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsGPCFilePath
  name: NeedsGPCFilePath
  nameWithType: CommonFilters.NeedsGPCFilePath
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsGPCFilePath
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.SpecificSID*
  commentId: Overload:SharpHoundCommonLib.LDAPQueries.CommonFilters.SpecificSID
  name: SpecificSID
  nameWithType: CommonFilters.SpecificSID
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.SpecificSID
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsSPN*
  commentId: Overload:SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsSPN
  name: NeedsSPN
  nameWithType: CommonFilters.NeedsSPN
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.NeedsSPN
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.ExcludeDomainControllers*
  commentId: Overload:SharpHoundCommonLib.LDAPQueries.CommonFilters.ExcludeDomainControllers
  name: ExcludeDomainControllers
  nameWithType: CommonFilters.ExcludeDomainControllers
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.ExcludeDomainControllers
- uid: SharpHoundCommonLib.LDAPQueries.CommonFilters.TrustedDomains*
  commentId: Overload:SharpHoundCommonLib.LDAPQueries.CommonFilters.TrustedDomains
  name: TrustedDomains
  nameWithType: CommonFilters.TrustedDomains
  fullName: SharpHoundCommonLib.LDAPQueries.CommonFilters.TrustedDomains
