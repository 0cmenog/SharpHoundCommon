### YamlMime:ManagedReference
items:
- uid: SharpHoundCommonLib.OutputTypes.MetaTag
  commentId: T:SharpHoundCommonLib.OutputTypes.MetaTag
  id: MetaTag
  parent: SharpHoundCommonLib.OutputTypes
  children:
  - SharpHoundCommonLib.OutputTypes.MetaTag.CollectionMethods
  - SharpHoundCommonLib.OutputTypes.MetaTag.Count
  - SharpHoundCommonLib.OutputTypes.MetaTag.DataType
  langs:
  - csharp
  - vb
  name: MetaTag
  nameWithType: MetaTag
  fullName: SharpHoundCommonLib.OutputTypes.MetaTag
  type: Class
  source:
    remote:
      path: src/CommonLib/OutputTypes/MetaTag.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: MetaTag
    path: ../src/CommonLib/OutputTypes/MetaTag.cs
    startLine: 4
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  syntax:
    content: public class MetaTag
    content.vb: Public Class MetaTag
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SharpHoundCommonLib.OutputTypes.MetaTag.CollectionMethods
  commentId: P:SharpHoundCommonLib.OutputTypes.MetaTag.CollectionMethods
  id: CollectionMethods
  parent: SharpHoundCommonLib.OutputTypes.MetaTag
  langs:
  - csharp
  - vb
  name: CollectionMethods
  nameWithType: MetaTag.CollectionMethods
  fullName: SharpHoundCommonLib.OutputTypes.MetaTag.CollectionMethods
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/MetaTag.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: CollectionMethods
    path: ../src/CommonLib/OutputTypes/MetaTag.cs
    startLine: 6
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  syntax:
    content: >-
      [JsonProperty(PropertyName = "methods")]

      public long CollectionMethods { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty(PropertyName:="methods")>

      Public Property CollectionMethods As Long
  overload: SharpHoundCommonLib.OutputTypes.MetaTag.CollectionMethods*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: methods
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.OutputTypes.MetaTag.DataType
  commentId: P:SharpHoundCommonLib.OutputTypes.MetaTag.DataType
  id: DataType
  parent: SharpHoundCommonLib.OutputTypes.MetaTag
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: MetaTag.DataType
  fullName: SharpHoundCommonLib.OutputTypes.MetaTag.DataType
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/MetaTag.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: DataType
    path: ../src/CommonLib/OutputTypes/MetaTag.cs
    startLine: 9
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  syntax:
    content: >-
      [JsonProperty(PropertyName = "type")]

      public string DataType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="type")>

      Public Property DataType As String
  overload: SharpHoundCommonLib.OutputTypes.MetaTag.DataType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.OutputTypes.MetaTag.Count
  commentId: P:SharpHoundCommonLib.OutputTypes.MetaTag.Count
  id: Count
  parent: SharpHoundCommonLib.OutputTypes.MetaTag
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: MetaTag.Count
  fullName: SharpHoundCommonLib.OutputTypes.MetaTag.Count
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/MetaTag.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: Count
    path: ../src/CommonLib/OutputTypes/MetaTag.cs
    startLine: 12
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.OutputTypes
  syntax:
    content: >-
      [JsonProperty(PropertyName = "count")]

      public long Count { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty(PropertyName:="count")>

      Public Property Count As Long
  overload: SharpHoundCommonLib.OutputTypes.MetaTag.Count*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: count
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SharpHoundCommonLib.OutputTypes
  commentId: N:SharpHoundCommonLib.OutputTypes
  name: SharpHoundCommonLib.OutputTypes
  nameWithType: SharpHoundCommonLib.OutputTypes
  fullName: SharpHoundCommonLib.OutputTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SharpHoundCommonLib.OutputTypes.MetaTag.CollectionMethods*
  commentId: Overload:SharpHoundCommonLib.OutputTypes.MetaTag.CollectionMethods
  name: CollectionMethods
  nameWithType: MetaTag.CollectionMethods
  fullName: SharpHoundCommonLib.OutputTypes.MetaTag.CollectionMethods
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: SharpHoundCommonLib.OutputTypes.MetaTag.DataType*
  commentId: Overload:SharpHoundCommonLib.OutputTypes.MetaTag.DataType
  name: DataType
  nameWithType: MetaTag.DataType
  fullName: SharpHoundCommonLib.OutputTypes.MetaTag.DataType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SharpHoundCommonLib.OutputTypes.MetaTag.Count*
  commentId: Overload:SharpHoundCommonLib.OutputTypes.MetaTag.Count
  name: Count
  nameWithType: MetaTag.Count
  fullName: SharpHoundCommonLib.OutputTypes.MetaTag.Count
