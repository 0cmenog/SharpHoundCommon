### YamlMime:ManagedReference
items:
- uid: SharpHoundCommonLib.Processors.ACLProcessor
  commentId: T:SharpHoundCommonLib.Processors.ACLProcessor
  id: ACLProcessor
  parent: SharpHoundCommonLib.Processors
  children:
  - SharpHoundCommonLib.Processors.ACLProcessor.IsACLProtected(System.Byte[])
  - SharpHoundCommonLib.Processors.ACLProcessor.ProcessACL(System.Byte[],System.String,SharpHoundCommonLib.Enums.Label,System.Boolean)
  - SharpHoundCommonLib.Processors.ACLProcessor.ProcessGMSAReaders(System.DirectoryServices.Protocols.SearchResultEntry,System.String)
  langs:
  - csharp
  - vb
  name: ACLProcessor
  nameWithType: ACLProcessor
  fullName: SharpHoundCommonLib.Processors.ACLProcessor
  type: Class
  source:
    remote:
      path: src/CommonLib/Processors/ACLProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ACLProcessor
    path: ../src/CommonLib/Processors/ACLProcessor.cs
    startLine: 14
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  syntax:
    content: public static class ACLProcessor
    content.vb: Public Module ACLProcessor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SharpHoundCommonLib.Processors.ACLProcessor.IsACLProtected(System.Byte[])
  commentId: M:SharpHoundCommonLib.Processors.ACLProcessor.IsACLProtected(System.Byte[])
  id: IsACLProtected(System.Byte[])
  parent: SharpHoundCommonLib.Processors.ACLProcessor
  langs:
  - csharp
  - vb
  name: IsACLProtected(Byte[])
  nameWithType: ACLProcessor.IsACLProtected(Byte[])
  fullName: SharpHoundCommonLib.Processors.ACLProcessor.IsACLProtected(System.Byte[])
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/ACLProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: IsACLProtected
    path: ../src/CommonLib/Processors/ACLProcessor.cs
    startLine: 62
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  summary: "\nGets the protection state of the access control list\n"
  example: []
  syntax:
    content: public static bool IsACLProtected(byte[] ntSecurityDescriptor)
    parameters:
    - id: ntSecurityDescriptor
      type: System.Byte[]
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsACLProtected(ntSecurityDescriptor As Byte()) As Boolean
  overload: SharpHoundCommonLib.Processors.ACLProcessor.IsACLProtected*
  nameWithType.vb: ACLProcessor.IsACLProtected(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SharpHoundCommonLib.Processors.ACLProcessor.IsACLProtected(System.Byte())
  name.vb: IsACLProtected(Byte())
- uid: SharpHoundCommonLib.Processors.ACLProcessor.ProcessACL(System.Byte[],System.String,SharpHoundCommonLib.Enums.Label,System.Boolean)
  commentId: M:SharpHoundCommonLib.Processors.ACLProcessor.ProcessACL(System.Byte[],System.String,SharpHoundCommonLib.Enums.Label,System.Boolean)
  id: ProcessACL(System.Byte[],System.String,SharpHoundCommonLib.Enums.Label,System.Boolean)
  parent: SharpHoundCommonLib.Processors.ACLProcessor
  langs:
  - csharp
  - vb
  name: ProcessACL(Byte[], String, Label, Boolean)
  nameWithType: ACLProcessor.ProcessACL(Byte[], String, Label, Boolean)
  fullName: SharpHoundCommonLib.Processors.ACLProcessor.ProcessACL(System.Byte[], System.String, SharpHoundCommonLib.Enums.Label, System.Boolean)
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/ACLProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ProcessACL
    path: ../src/CommonLib/Processors/ACLProcessor.cs
    startLine: 81
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  summary: "\nRead&apos;s the ntSecurityDescriptor from a SearchResultEntry and processes the ACEs in the ACL, filtering out ACEs that BloodHound is not interested in\n"
  example: []
  syntax:
    content: public static IEnumerable<ACE> ProcessACL(byte[] ntSecurityDescriptor, string objectDomain, Label objectType, bool hasLaps)
    parameters:
    - id: ntSecurityDescriptor
      type: System.Byte[]
      description: ''
    - id: objectDomain
      type: System.String
      description: ''
    - id: objectType
      type: SharpHoundCommonLib.Enums.Label
      description: ''
    - id: hasLaps
      type: System.Boolean
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.ACE}
      description: ''
    content.vb: Public Shared Function ProcessACL(ntSecurityDescriptor As Byte(), objectDomain As String, objectType As Label, hasLaps As Boolean) As IEnumerable(Of ACE)
  overload: SharpHoundCommonLib.Processors.ACLProcessor.ProcessACL*
  nameWithType.vb: ACLProcessor.ProcessACL(Byte(), String, Label, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SharpHoundCommonLib.Processors.ACLProcessor.ProcessACL(System.Byte(), System.String, SharpHoundCommonLib.Enums.Label, System.Boolean)
  name.vb: ProcessACL(Byte(), String, Label, Boolean)
- uid: SharpHoundCommonLib.Processors.ACLProcessor.ProcessGMSAReaders(System.DirectoryServices.Protocols.SearchResultEntry,System.String)
  commentId: M:SharpHoundCommonLib.Processors.ACLProcessor.ProcessGMSAReaders(System.DirectoryServices.Protocols.SearchResultEntry,System.String)
  id: ProcessGMSAReaders(System.DirectoryServices.Protocols.SearchResultEntry,System.String)
  parent: SharpHoundCommonLib.Processors.ACLProcessor
  langs:
  - csharp
  - vb
  name: ProcessGMSAReaders(SearchResultEntry, String)
  nameWithType: ACLProcessor.ProcessGMSAReaders(SearchResultEntry, String)
  fullName: SharpHoundCommonLib.Processors.ACLProcessor.ProcessGMSAReaders(System.DirectoryServices.Protocols.SearchResultEntry, System.String)
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/ACLProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: ProcessGMSAReaders
    path: ../src/CommonLib/Processors/ACLProcessor.cs
    startLine: 309
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  summary: "\nProcesses the msds-groupmsamembership property and returns ACEs representing principals that can read the GMSA password from an object\n"
  example: []
  syntax:
    content: public static IEnumerable<ACE> ProcessGMSAReaders(SearchResultEntry entry, string objectDomain)
    parameters:
    - id: entry
      type: System.DirectoryServices.Protocols.SearchResultEntry
      description: ''
    - id: objectDomain
      type: System.String
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.ACE}
      description: ''
    content.vb: Public Shared Function ProcessGMSAReaders(entry As SearchResultEntry, objectDomain As String) As IEnumerable(Of ACE)
  overload: SharpHoundCommonLib.Processors.ACLProcessor.ProcessGMSAReaders*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SharpHoundCommonLib.Processors
  commentId: N:SharpHoundCommonLib.Processors
  name: SharpHoundCommonLib.Processors
  nameWithType: SharpHoundCommonLib.Processors
  fullName: SharpHoundCommonLib.Processors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SharpHoundCommonLib.Processors.ACLProcessor.IsACLProtected*
  commentId: Overload:SharpHoundCommonLib.Processors.ACLProcessor.IsACLProtected
  name: IsACLProtected
  nameWithType: ACLProcessor.IsACLProtected
  fullName: SharpHoundCommonLib.Processors.ACLProcessor.IsACLProtected
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SharpHoundCommonLib.Processors.ACLProcessor.ProcessACL*
  commentId: Overload:SharpHoundCommonLib.Processors.ACLProcessor.ProcessACL
  name: ProcessACL
  nameWithType: ACLProcessor.ProcessACL
  fullName: SharpHoundCommonLib.Processors.ACLProcessor.ProcessACL
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SharpHoundCommonLib.Enums.Label
  commentId: T:SharpHoundCommonLib.Enums.Label
  parent: SharpHoundCommonLib.Enums
  name: Label
  nameWithType: Label
  fullName: SharpHoundCommonLib.Enums.Label
- uid: System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.ACE}
  commentId: T:System.Collections.Generic.IEnumerable{SharpHoundCommonLib.OutputTypes.ACE}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ACE>
  nameWithType: IEnumerable<ACE>
  fullName: System.Collections.Generic.IEnumerable<SharpHoundCommonLib.OutputTypes.ACE>
  nameWithType.vb: IEnumerable(Of ACE)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SharpHoundCommonLib.OutputTypes.ACE)
  name.vb: IEnumerable(Of ACE)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SharpHoundCommonLib.OutputTypes.ACE
    name: ACE
    nameWithType: ACE
    fullName: SharpHoundCommonLib.OutputTypes.ACE
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SharpHoundCommonLib.OutputTypes.ACE
    name: ACE
    nameWithType: ACE
    fullName: SharpHoundCommonLib.OutputTypes.ACE
  - name: )
    nameWithType: )
    fullName: )
- uid: SharpHoundCommonLib.Enums
  commentId: N:SharpHoundCommonLib.Enums
  name: SharpHoundCommonLib.Enums
  nameWithType: SharpHoundCommonLib.Enums
  fullName: SharpHoundCommonLib.Enums
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SharpHoundCommonLib.Processors.ACLProcessor.ProcessGMSAReaders*
  commentId: Overload:SharpHoundCommonLib.Processors.ACLProcessor.ProcessGMSAReaders
  name: ProcessGMSAReaders
  nameWithType: ACLProcessor.ProcessGMSAReaders
  fullName: SharpHoundCommonLib.Processors.ACLProcessor.ProcessGMSAReaders
- uid: System.DirectoryServices.Protocols.SearchResultEntry
  commentId: T:System.DirectoryServices.Protocols.SearchResultEntry
  parent: System.DirectoryServices.Protocols
  isExternal: true
  name: SearchResultEntry
  nameWithType: SearchResultEntry
  fullName: System.DirectoryServices.Protocols.SearchResultEntry
- uid: System.DirectoryServices.Protocols
  commentId: N:System.DirectoryServices.Protocols
  isExternal: true
  name: System.DirectoryServices.Protocols
  nameWithType: System.DirectoryServices.Protocols
  fullName: System.DirectoryServices.Protocols
