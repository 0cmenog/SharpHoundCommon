### YamlMime:ManagedReference
items:
- uid: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults
  commentId: T:SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults
  id: GPOLocalGroupProcessor.GroupResults
  parent: SharpHoundCommonLib.Processors
  children:
  - SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.LocalGroups
  - SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.RestrictedMember
  - SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.RestrictedMemberOf
  langs:
  - csharp
  - vb
  name: GPOLocalGroupProcessor.GroupResults
  nameWithType: GPOLocalGroupProcessor.GroupResults
  fullName: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults
  type: Class
  source:
    remote:
      path: src/CommonLib/Processors/GPOLocalGroupProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: GroupResults
    path: ../src/CommonLib/Processors/GPOLocalGroupProcessor.cs
    startLine: 558
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  summary: "\nStorage for each different group type\n"
  example: []
  syntax:
    content: public class GroupResults
    content.vb: Public Class GroupResults
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.RestrictedMemberOf
  commentId: F:SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.RestrictedMemberOf
  id: RestrictedMemberOf
  parent: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults
  langs:
  - csharp
  - vb
  name: RestrictedMemberOf
  nameWithType: GPOLocalGroupProcessor.GroupResults.RestrictedMemberOf
  fullName: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.RestrictedMemberOf
  type: Field
  source:
    remote:
      path: src/CommonLib/Processors/GPOLocalGroupProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: RestrictedMemberOf
    path: ../src/CommonLib/Processors/GPOLocalGroupProcessor.cs
    startLine: 560
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  syntax:
    content: public List<TypedPrincipal> RestrictedMemberOf
    return:
      type: System.Collections.Generic.List{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
    content.vb: Public RestrictedMemberOf As List(Of TypedPrincipal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.RestrictedMember
  commentId: F:SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.RestrictedMember
  id: RestrictedMember
  parent: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults
  langs:
  - csharp
  - vb
  name: RestrictedMember
  nameWithType: GPOLocalGroupProcessor.GroupResults.RestrictedMember
  fullName: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.RestrictedMember
  type: Field
  source:
    remote:
      path: src/CommonLib/Processors/GPOLocalGroupProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: RestrictedMember
    path: ../src/CommonLib/Processors/GPOLocalGroupProcessor.cs
    startLine: 561
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  syntax:
    content: public List<TypedPrincipal> RestrictedMember
    return:
      type: System.Collections.Generic.List{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
    content.vb: Public RestrictedMember As List(Of TypedPrincipal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.LocalGroups
  commentId: F:SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.LocalGroups
  id: LocalGroups
  parent: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults
  langs:
  - csharp
  - vb
  name: LocalGroups
  nameWithType: GPOLocalGroupProcessor.GroupResults.LocalGroups
  fullName: SharpHoundCommonLib.Processors.GPOLocalGroupProcessor.GroupResults.LocalGroups
  type: Field
  source:
    remote:
      path: src/CommonLib/Processors/GPOLocalGroupProcessor.cs
      branch: master
      repo: https://github.com/BloodHoundAD/SharpHoundCommon.git
    id: LocalGroups
    path: ../src/CommonLib/Processors/GPOLocalGroupProcessor.cs
    startLine: 562
  assemblies:
  - SharpHoundCommonLib
  namespace: SharpHoundCommonLib.Processors
  syntax:
    content: public List<TypedPrincipal> LocalGroups
    return:
      type: System.Collections.Generic.List{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
    content.vb: Public LocalGroups As List(Of TypedPrincipal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SharpHoundCommonLib.Processors
  commentId: N:SharpHoundCommonLib.Processors
  name: SharpHoundCommonLib.Processors
  nameWithType: SharpHoundCommonLib.Processors
  fullName: SharpHoundCommonLib.Processors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
  commentId: T:System.Collections.Generic.List{SharpHoundCommonLib.OutputTypes.TypedPrincipal}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TypedPrincipal>
  nameWithType: List<TypedPrincipal>
  fullName: System.Collections.Generic.List<SharpHoundCommonLib.OutputTypes.TypedPrincipal>
  nameWithType.vb: List(Of TypedPrincipal)
  fullName.vb: System.Collections.Generic.List(Of SharpHoundCommonLib.OutputTypes.TypedPrincipal)
  name.vb: List(Of TypedPrincipal)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SharpHoundCommonLib.OutputTypes.TypedPrincipal
    name: TypedPrincipal
    nameWithType: TypedPrincipal
    fullName: SharpHoundCommonLib.OutputTypes.TypedPrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SharpHoundCommonLib.OutputTypes.TypedPrincipal
    name: TypedPrincipal
    nameWithType: TypedPrincipal
    fullName: SharpHoundCommonLib.OutputTypes.TypedPrincipal
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
